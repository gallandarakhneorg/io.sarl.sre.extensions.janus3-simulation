/* 
 * $Id$
 * 
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 * 
 * Copyright (C) 2014-2018 the original authors or authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.extensions.sre.simulation.boot.injection.factories

import com.google.inject.AbstractModule
import com.google.inject.Provides
import com.google.inject.Singleton
import io.bootique.config.ConfigurationFactory
import io.sarl.extensions.sre.simulation.boot.factories.TimeFactory

/**
 * Module for the specifying the SARL simulation environment.
 * 
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.8.0
 */
class FactoryModule extends AbstractModule {

	protected override configure {
		//
	}

	/** Replies the instance of the time factory.
	 * 
	 * @param configFactory accessor to the bootique factory.
	 * @return the time configuration accessor.
	 */
	@Provides
	@Singleton
	def getTimeFactory(configFactory : ConfigurationFactory) : TimeFactory {
		TimeFactory::getConfigurationFactory(configFactory)
	}

}
